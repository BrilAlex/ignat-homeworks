{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message_wrap","message_avatar","src","avatar","alt","message","message_sender","name","message_text","message_time","time","AlternativeMessage","s","reply_wrap","senderAvatar","reply","senderName","messageText","dispatchTime","messageData","replyData","HW1","Affair","affairWrap","affairTitle","affair","affairPriority","priority","deleteAffairButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairsWrap","filterAffairsButton","setFilter","AlternativeAffairs","affairsToRender","onFilterClickHandler","filterValue","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","onKeyPressCallback","addUser","error","totalUsers","inputClass","userNameInput","greetingWrap","value","onChange","onKeyPress","addUserButton","usersCount","errorSpan","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","AlternativeGreeting","userName","setUserName","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","customInputStyle","customButtonStyle","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","withPencilIcon","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","SuperSelect","options","onChangeOption","mappedOptions","o","i","superSelect","SuperRadio","onChangeCallback","arr","HW7","Junior","JuniorPlus","Error404","PATH","Routes","path","exact","render","to","Header","headerNav","wrap","activeClassName","activeItem","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e10be428.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairsWrap\":\"Affairs_affairsWrap__1szMj\",\"filterAffairsButton\":\"Affairs_filterAffairsButton__x0Hfg\",\"affairWrap\":\"Affairs_affairWrap__C0P56\",\"affairTitle\":\"Affairs_affairTitle__1KpRu\",\"affairPriority\":\"Affairs_affairPriority__13njK\",\"deleteAffairButton\":\"Affairs_deleteAffairButton__3tOYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_wrap\":\"Message_message_wrap__CPLtO\",\"reply_wrap\":\"Message_reply_wrap__gjZ1t\",\"message_avatar\":\"Message_message_avatar__2K-iW\",\"message\":\"Message_message__1lEzc\",\"reply\":\"Message_reply__3Sl97\",\"message_sender\":\"Message_message_sender__3WiMh\",\"message_text\":\"Message_message_text__3Esdg\",\"message_time\":\"Message_message_time__qBduW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingWrap\":\"Greeting_greetingWrap__1vTNq\",\"userNameInput\":\"Greeting_userNameInput__3MoEZ\",\"addUserButton\":\"Greeting_addUserButton__3ovZm\",\"usersCount\":\"Greeting_usersCount__2FI5B\",\"errorSpan\":\"Greeting_errorSpan__isX1N\",\"error\":\"Greeting_error__18FTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerNav\":\"Header_headerNav__2O2mm\",\"wrap\":\"Header_wrap__2m3Dy\",\"activeItem\":\"Header_activeItem__28nck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__24O9m\",\"errorInput\":\"SuperInputText_errorInput__2nC61\",\"error\":\"SuperInputText_error__1c_lo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customInputStyle\":\"HW4_customInputStyle__Xt5un\",\"customButtonStyle\":\"HW4_customButtonStyle__MBFRc\",\"column\":\"HW4_column__2wGiP\",\"testSpanError\":\"HW4_testSpanError__33qIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1TcpD\",\"red\":\"SuperButton_red__1eqky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3tm0A\",\"spanClassName\":\"SuperCheckbox_spanClassName__145El\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withPencilIcon\":\"SuperEditableSpan_withPencilIcon__1fXqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__37xLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"SuperSelect_superSelect__3q-kr\"};","import React from 'react';\r\nimport styles from \"./Message.module.css\";\r\n\r\ntype MessagePropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={styles.message_wrap}>\r\n            <div className={styles.message_avatar}>\r\n                <img src={props.avatar} alt={\"Avatar\"}/></div>\r\n            <div className={styles.message}>\r\n                <p className={styles.message_sender}>{props.name}</p>\r\n                <p className={styles.message_text}>{props.message}</p>\r\n                <p className={styles.message_time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\ntype MessageProps = {\r\n    senderAvatar: string,\r\n    senderName: string,\r\n    messageText: string,\r\n    dispatchTime: string\r\n}\r\n\r\nexport const AlternativeMessage = (props: MessageProps)  => {\r\n    return (\r\n        <div>\r\n            <div className={s.reply_wrap}>\r\n                <div className={s.message_avatar}>\r\n                    <img src={props.senderAvatar} alt={\"Avatar\"}/></div>\r\n                <div className={s.reply}>\r\n                    <p className={s.message_sender}>{props.senderName}</p>\r\n                    <p className={s.message_text}>{props.messageText}</p>\r\n                    <p className={s.message_time}>{props.dispatchTime}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport {AlternativeMessage} from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://pbs.twimg.com/media/BwnUwfNIYAAvp-F.jpg',\r\n    name: 'Джоэл',\r\n    message: 'Типизировал state для соц. сети?',\r\n    time: '18:05'\r\n}\r\n\r\nconst replyData = {\r\n    avatar: 'https://pbs.twimg.com/media/EYqbdt0XkAANziO.jpg',\r\n    name: 'Шепард',\r\n    message: 'Еще нет, в процессе. Как раз занимаюсь этим вопросом.',\r\n    time: '18:33'\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeMessage\r\n                senderAvatar={replyData.avatar}\r\n                senderName={replyData.name}\r\n                messageText={replyData.message}\r\n                dispatchTime={replyData.time}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport styles from \"./Affairs.module.css\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // any fixed\r\n    deleteAffairCallback: (aId: number) => void // any fixed\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// fixed\r\n\r\n    return (\r\n        <div className={styles.affairWrap}>\r\n            <span className={styles.affairTitle}>{props.affair.name}</span>\r\n            <span className={styles.affairPriority}>{props.affair.priority}</span>{/* shows affair title and priority */}\r\n\r\n            <button className={styles.deleteAffairButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport styles from \"./Affairs.module.css\";\r\n\r\ntype AffairsPropsType = { // any fixed\r\n    data: Array<AffairType>\r\n    setFilter: (filterValue: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")} // fixed\r\n    const setHigh = () => {props.setFilter(\"high\")}\r\n    const setMiddle = () => {props.setFilter(\"middle\")}\r\n    const setLow = () => {props.setFilter(\"low\")}\r\n\r\n    return (\r\n        <div className={styles.affairsWrap}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={styles.filterAffairsButton} onClick={setAll}>All</button>\r\n            <button className={styles.filterAffairsButton} onClick={setHigh}>High</button>\r\n            <button className={styles.filterAffairsButton} onClick={setMiddle}>Middle</button>\r\n            <button className={styles.filterAffairsButton} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport styles from \"./Affairs.module.css\";\r\n\r\ntype AltAffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filterValue: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\ntype FilterValueType = \"all\" | \"high\" | \"middle\" | \"low\";\r\n\r\nfunction AlternativeAffairs(props: AltAffairsPropsType) {\r\n    const affairsToRender = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const onFilterClickHandler = (filterValue: FilterValueType) => {\r\n        props.setFilter(filterValue)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.affairsWrap}>\r\n\r\n            {affairsToRender}\r\n\r\n            <button className={styles.filterAffairsButton}\r\n                    onClick={()=> onFilterClickHandler(\"all\")}>All</button>\r\n            <button className={styles.filterAffairsButton}\r\n                    onClick={()=> onFilterClickHandler(\"high\")}>High</button>\r\n            <button className={styles.filterAffairsButton}\r\n                    onClick={()=> onFilterClickHandler(\"middle\")}>Middle</button>\r\n            <button className={styles.filterAffairsButton}\r\n                    onClick={()=> onFilterClickHandler(\"low\")}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlternativeAffairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport AlternativeAffairs from \"./AlternativeAffairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\" // any fixed\r\nexport type AffairType = { // any fixed\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // any fixed\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // any fixed\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter) // fixed\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // any fixed\r\n    return affairs.filter(a => a._id !== _id) // fixed\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // any fixed\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // any fixed\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeAffairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // any fixed\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // any fixed\r\n    onKeyPressCallback: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void // any fixed\r\n    error: boolean // any fixed\r\n    totalUsers: number // any fixed\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, onKeyPressCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? `${s.userNameInput} ${s.error}` : s.userNameInput; // fixed with (?:)\r\n\r\n    return (\r\n        <div className={s.greetingWrap}>\r\n            <div>\r\n                <input value={name} onChange={setNameCallback}\r\n                       onKeyPress={onKeyPressCallback} className={inputClass}/>\r\n                <button className={s.addUserButton} onClick={addUser}>add</button>\r\n                <span className={s.usersCount}>{totalUsers}</span>\r\n            </div>\r\n            {error && <span className={s.errorSpan}>User name is required</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // any fixed\r\n    addUserCallback: (nameValue: string) => void // any fixed\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // any fixed\r\n    const [error, setError] = useState<boolean>(false) // any fixed\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // any fixed\r\n        setName(e.currentTarget.value);\r\n        setError(false);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === \"Enter\") {\r\n            if (name.trim() !== \"\") {\r\n                addUserCallback(name);\r\n                alert(`Hello  ${name}!`);\r\n                setName(\"\");\r\n            } else setError(true);\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== \"\") {\r\n            addUserCallback(name);\r\n            alert(`Hello  ${name}!`);\r\n            setName(\"\");\r\n        } else setError(true); // fixed\r\n    }\r\n\r\n    const totalUsers = users.length // fixed\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            onKeyPressCallback={onKeyPressCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // any fixed\r\n    addUserCallback: (nameValue: string) => void // any fixed\r\n}\r\n\r\nexport function AlternativeGreeting({users, addUserCallback}: GreetingContainerPropsType) {\r\n    const [userName, setUserName] = useState<string>('')\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUserName(e.currentTarget.value);\r\n        setError(false);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === \"Enter\") {\r\n            if (userName.trim() !== \"\") {\r\n                addUserCallback(userName.trim()); // Fixed adding spaces before and after name\r\n                alert(`Hello  ${userName.trim()}!`);  // Fixed adding spaces before and after name\r\n                setUserName(\"\");\r\n            } else setError(true);\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        if (userName.trim() !== \"\") {\r\n            addUserCallback(userName.trim()); // Fixed adding spaces before and after name\r\n            alert(`Hello  ${userName.trim()}!`); // Fixed adding spaces before and after name\r\n            setUserName(\"\");\r\n        } else setError(true);\r\n    }\r\n\r\n    const totalUsers = users.length\r\n    return (\r\n        <div>\r\n            <Greeting\r\n                name={userName}\r\n                setNameCallback={setNameCallback}\r\n                onKeyPressCallback={onKeyPressCallback}\r\n                addUser={addUser}\r\n                error={error}\r\n                totalUsers={totalUsers}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\nimport {AlternativeGreeting} from \"./AlternativeGreeting\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // any fixed\r\n    name: string // any fixed\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // any fixed\r\n\r\n    const addUserCallback = (name: string) => { // any fixed\r\n        setUsers([{_id: v1(), name: name}, ...users]) // fixed\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeGreeting users={users} addUserCallback={addUserCallback}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = error ?\r\n        `${s.errorInput} ${s.superInput}` :\r\n        `${s.superInput} ${className ? className : \"\"}` // fixed with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = red ?\r\n        `${s.red} ${s.default}` :\r\n        `${s.default} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(onChangeChecked) onChangeChecked(e.currentTarget.checked);\r\n        if(onChange) onChange(e);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.customInputStyle} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton className={s.customButtonStyle}>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from \"./SuperEditableSpan.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = className ? `${s.withPencilIcon} ${className}` : s.withPencilIcon;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', \"\"));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <h1>Pre Junior page</h1>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from \"./SuperSelect.module.css\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) =>\r\n        <option key={i} value={o}>{o}</option>) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        if(onChange) onChange(e);\r\n        if(onChangeOption) onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <select className={s.superSelect} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(onChange) onChange(e);\r\n        if(onChangeOption) onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                name={name}\r\n                value={o}\r\n                checked={o === value}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <h1>Junior page</h1>\r\n            <HW7/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <h1>Junior Plus page</h1>\r\n            {/*<HW7/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport Error404 from \"./pages/Error404\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {PATH} from \"./Routes\";\r\nimport s from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.headerNav}>\r\n            <div className={s.wrap}>\r\n                <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeItem}>Pre Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR} activeClassName={s.activeItem}>Junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.activeItem}>Junior Plus</NavLink>\r\n                <span>Menu</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}